SQL> 
SQL> set linesize 150
SQL> set pagesize 99
SQL> set colsep '||'
SQL> set colsep '|=|'
SQL> set underline =
SQL> set null s/Dato
SQL> 
SQL> rem ROSENZWEIG,B &  RAKHIMOV,E (2009).Oracle® PL/SQL™by Example,Boston,MA,USA:Perarson.
SQL> rem 8
SQL> rem [ROSENZWEIG & RAKHIMOV,2009,166]
SQL> 
SQL> SET SERVEROUTPUT ON
SQL> DECLARE
  2  v_num1 INTEGER := &sv_num1;
  3  v_num2 INTEGER := &sv_num2;
  4  v_result NUMBER;
  5  BEGIN
  6  v_result := v_num1 / v_num2;
  7  DBMS_OUTPUT.PUT_LINE ('v_result: '||v_result);
  8  EXCEPTION
  9  WHEN ZERO_DIVIDE THEN
 10  DBMS_OUTPUT.PUT_LINE ('A number cannot be divided by zero.');
 11  END;
 12  /
Introduzca un valor para sv_num1: 5
antiguo   2: v_num1 INTEGER := &sv_num1;
nuevo   2: v_num1 INTEGER := 5;
Introduzca un valor para sv_num2: 0
antiguo   3: v_num2 INTEGER := &sv_num2;
nuevo   3: v_num2 INTEGER := 0;
A number cannot be divided by zero.                                                                                                                   

Procedimiento PL/SQL terminado correctamente.

SQL> DECLARE
  2  v_num1 INTEGER := &sv_num1;
  3  v_num2 INTEGER := &sv_num2;
  4  v_result NUMBER;
  5  BEGIN
  6  v_result := v_num1 / v_num2;
  7  DBMS_OUTPUT.PUT_LINE ('v_result: '||v_result);
  8  END;
  9  /
Introduzca un valor para sv_num1: 6
antiguo   2: v_num1 INTEGER := &sv_num1;
nuevo   2: v_num1 INTEGER := 6;
Introduzca un valor para sv_num2: 7
antiguo   3: v_num2 INTEGER := &sv_num2;
nuevo   3: v_num2 INTEGER := 7;
v_result: .8571428571428571428571428571428571428571                                                                                                   

Procedimiento PL/SQL terminado correctamente.

SQL> rem 180
SQL> DECLARE
  2  v_student_id NUMBER := &sv_student_id;
  3  v_name VARCHAR2(30);
  4  BEGIN
  5  SELECT RTRIM(first_name)||' '||RTRIM(last_name)
  6  INTO v_name
  7  FROM student
  8  WHERE student_id = v_student_id;
  9  DBMS_OUTPUT.PUT_LINE ('Student name is '||v_name);
 10  EXCEPTION
 11  WHEN NO_DATA_FOUND THEN
 12  DBMS_OUTPUT.PUT_LINE ('There is no such student');
 13  END;
 14  /
Introduzca un valor para sv_student_id: 148
antiguo   2: v_student_id NUMBER := &sv_student_id;
nuevo   2: v_student_id NUMBER := 148;
Student name is D. Orent                                                                                                                              

Procedimiento PL/SQL terminado correctamente.

SQL> rem 171
SQL> DECLARE
  2  v_student_id NUMBER := &sv_student_id;
  3  v_enrolled VARCHAR2(3) := 'NO';
  4  BEGIN
  5  DBMS_OUTPUT.PUT_LINE ('Check if the student is enrolled');
  6  SELECT 'YES'
  7  INTO v_enrolled
  8  FROM enrollment
  9  WHERE student_id = v_student_id;
 10  DBMS_OUTPUT.PUT_LINE ('The student is enrolled into one course');
 11  EXCEPTION
 12  WHEN NO_DATA_FOUND THEN
 13  DBMS_OUTPUT.PUT_LINE ('The student is not enrolled');
 14  WHEN TOO_MANY_ROWS THEN
 15  DBMS_OUTPUT.PUT_LINE
 16  ('The student is enrolled in too many courses');
 17  END;
 18  /
Introduzca un valor para sv_student_id: 45
antiguo   2: v_student_id NUMBER := &sv_student_id;
nuevo   2: v_student_id NUMBER := 45;
Check if the student is enrolled                                                                                                                      
The student is not enrolled                                                                                                                           

Procedimiento PL/SQL terminado correctamente.

SQL> 
SQL> rem 9
SQL> rem 190
SQL> DECLARE
  2  v_student_id student.student_id%type := &sv_student_id;
  3  v_total_courses NUMBER;
  4  e_invalid_id EXCEPTION;
  5  BEGIN
  6  IF v_student_id < 0 THEN
  7  RAISE e_invalid_id;
  8  ELSE
  9  SELECT COUNT(*)
 10  INTO v_total_courses
 11  FROM enrollment
 12  WHERE student_id = v_student_id;
 13  DBMS_OUTPUT.PUT_LINE ('The student is registered for '||
 14  v_total_courses||' courses');
 15  END IF;
 16  DBMS_OUTPUT.PUT_LINE ('No exception has been raised');
 17  EXCEPTION
 18  WHEN e_invalid_id THEN
 19  DBMS_OUTPUT.PUT_LINE ('An id cannot be negative');
 20  END;
 21  /
Introduzca un valor para sv_student_id: 23
antiguo   2: v_student_id student.student_id%type := &sv_student_id;
nuevo   2: v_student_id student.student_id%type := 23;
The student is registered for 0 courses                                                                                                               
No exception has been raised                                                                                                                          

Procedimiento PL/SQL terminado correctamente.

SQL> 
SQL> rem 198
SQL> --outer block
SQL> BEGIN
  2  -- inner block
  3  DECLARE
  4  v_test_var CHAR(3):= 'ABCDE';
  5  BEGIN
  6  DBMS_OUTPUT.PUT_LINE ('This is a test');
  7  EXCEPTION
  8  WHEN INVALID_NUMBER OR VALUE_ERROR THEN
  9  DBMS_OUTPUT.PUT_LINE ('An error has occurred in '||
 10  'the inner block');
 11  END;
 12  EXCEPTION
 13  WHEN INVALID_NUMBER OR VALUE_ERROR THEN
 14  DBMS_OUTPUT.PUT_LINE ('An error has occurred in the '||
 15  'program');
 16  END;
 17  /
An error has occurred in the program                                                                                                                  

Procedimiento PL/SQL terminado correctamente.

SQL> 
SQL> rem 11
SQL> rem implicit 231
SQL> SET SERVEROUTPUT ON;
SQL> DECLARE
  2  v_first_name VARCHAR2(35);
  3  v_last_name VARCHAR2(35);
  4  BEGIN
  5  SELECT first_name, last_name
  6  INTO v_first_name, v_last_name
  7  FROM student
  8  WHERE student_id = 123;
  9  DBMS_OUTPUT.PUT_LINE ('Student name: '||v_first_name||' '||v_last_name);
 10  EXCEPTION
 11  WHEN NO_DATA_FOUND THEN
 12  DBMS_OUTPUT.PUT_LINE
 13  ('There is no student with student ID 123');
 14  END;
 15  /
Student name: Pierre Radicola                                                                                                                         

Procedimiento PL/SQL terminado correctamente.

SQL> rem 234
SQL> rem The variable vr_student is a record type of the existing database table student. In other
SQL> rem words, it has the same components as a row in the student table. A cursor-based record is much
SQL> rem the same, except that it is drawn from the select list of an explicitly declared cursor.
SQL> -- ch11_1a.sql
SQL> SET SERVEROUTPUT ON
SQL> DECLARE
  2  vr_student student%ROWTYPE;
  3  BEGIN
  4  SELECT *
  5  INTO vr_student
  6  FROM student
  7  WHERE student_id = 156;
  8  DBMS_OUTPUT.PUT_LINE (vr_student.first_name||' '
  9  ||vr_student.last_name||' has an ID of 156');
 10  EXCEPTION
 11  WHEN no_data_found THEN
 12  RAISE_APPLICATION_ERROR(-2001,'The Student '|| 'is not in the database');
 13  END;
 14  /
Scott Grant has an ID of 156                                                                                                                          

Procedimiento PL/SQL terminado correctamente.

SQL> rem 241
SQL> SET SERVEROUTPUT ON
SQL> DECLARE
  2  v_city zipcode.city%type;
  3  BEGIN
  4  SELECT city
  5  INTO v_city
  6  FROM zipcode
  7  WHERE zip = 07002;
  8  IF SQL%ROWCOUNT = 1
  9  THEN
 10  DBMS_OUTPUT.PUT_LINE(v_city ||' has a '||
 11  'zipcode of 07002');
 12  ELSIF SQL%ROWCOUNT = 0
 13  THEN
 14  DBMS_OUTPUT.PUT_LINE('The zipcode 07002 is '||
 15  ' not in the database');
 16  ELSE
 17  DBMS_OUTPUT.PUT_LINE('Stop harassing me');
 18  END IF;
 19  END;
 20  /
Bayonne has a zipcode of 07002                                                                                                                        

Procedimiento PL/SQL terminado correctamente.

SQL> rem The declaration section declares a variable, v_city, anchored to the datatype of the city item in
SQL> rem the zipcode table. The SELECT statement causes an implicit cursor to be opened, fetched, and then
SQL> rem closed. The IF clause uses the attribute %ROWCOUNT to determine if the implicit cursor has a row
SQL> rem count of 1. If it does, the first DBMS_OUTPUT line is displayed. Note that this example does not
SQL> rem handle a situation in which the row count is greater than 1. Because the zipcode table’s primary
SQL> rem key is the zip code, this could happen.
SQL> 
SQL> rem triggers
SQL> DROP TABLE TEMPORAL5;

Tabla borrada.

SQL> CREATE TABLE TEMPORAL5 (X NUMBER, Y NUMBER, Z NUMBER DEFAULT 5);

Tabla creada.

SQL> 
SQL> CREATE OR REPLACE TRIGGER temp_aiur
  2  AFTER INSERT OR UPDATE OF Y ON TEMPORAL5
  3  FOR EACH ROW
  4  WHEN (OLD.Y IS NULL and NEW.Y IS NOT NULL
  5  	   OR NEW.X BETWEEN 1 AND 10)
  6  BEGIN
  7  	 CASE
  8  	 WHEN inserting THEN
  9  	     dbms_output.put_line('X := '||:new.x);
 10  	 WHEN updating THEN
 11  	    dbms_output.put_line
 12  	       ('Y is reset from NULL');
 13  	 END CASE;
 14  END;
 15  /

Disparador creado.

SQL> 
SQL> REM 2.  Write a trigger to print
SQL> REM the current values in a row
SQL> REM being deleted.
SQL> 
SQL> CREATE OR REPLACE TRIGGER temp_adr2
  2  AFTER DELETE ON TEMPORAL5
  3  FOR EACH ROW
  4  BEGIN
  5  	 dbms_output.put_line
  6  	    (:old.x||' '||:old.y||' '||:old.z);
  7  END;
  8  /

Disparador creado.

SQL> 
SQL> REM 4. Write two triggers that accomplish
SQL> REM the same as the prior six triggers.
SQL> REM DROP TRIGGER temp_biudr;
SQL> CREATE OR REPLACE TRIGGER temp_biudr2
  2  BEFORE INSERT OR UPDATE OR DELETE ON TEMPORAL5
  3  FOR EACH ROW
  4  BEGIN
  5  	 CASE
  6  	 WHEN inserting THEN
  7  	     dbms_output.put_line('inserting before');
  8  	 WHEN updating THEN
  9  	     dbms_output.put_line('updating before');
 10  	 WHEN deleting THEN
 11  	     dbms_output.put_line('deleting before');
 12  	 END CASE;
 13  END;
 14  /

Disparador creado.

SQL> 
SQL> CREATE OR REPLACE TRIGGER temp_aiudr
  2  AFTER INSERT OR UPDATE OR DELETE ON TEMPORAL5
  3  FOR EACH ROW
  4  BEGIN
  5  	 CASE
  6  	 WHEN inserting THEN
  7  	     dbms_output.put_line('inserting after');
  8  	 WHEN updating THEN
  9  	     dbms_output.put_line('updating after');
 10  	 WHEN deleting THEN
 11  	     dbms_output.put_line('deleting after');
 12  	 END CASE;
 13  END;
 14  /

Disparador creado.

SQL> 
SQL> -- DATOS DE PRUEBA
SQL> REM
SQL> INSERT INTO TEMPORAL5 (X) VALUES (3);
inserting before                                                                                                                                      
inserting after                                                                                                                                       
X := 3                                                                                                                                                

1 fila creada.

SQL> INSERT INTO TEMPORAL5 (Y) VALUES (10);
inserting before                                                                                                                                      
inserting after                                                                                                                                       
X :=                                                                                                                                                  

1 fila creada.

SQL> 
SQL> INSERT INTO TEMPORAL5 (X) VALUES (100);
inserting before                                                                                                                                      
inserting after                                                                                                                                       

1 fila creada.

SQL> SELECT * FROM TEMPORAL5;

         X|=|         Y|=|         Z                                                                                                                  
==========|=|==========|=|==========                                                                                                                  
         3|=|s/Dato    |=|         5                                                                                                                  
s/Dato    |=|        10|=|         5                                                                                                                  
       100|=|s/Dato    |=|         5                                                                                                                  

3 filas seleccionadas.

SQL> UPDATE TEMPORAL5 SET X=X+1 WHERE X>=1;
updating before                                                                                                                                       
updating after                                                                                                                                        
updating before                                                                                                                                       
updating after                                                                                                                                        

2 filas actualizadas.

SQL> 
SQL> SELECT * FROM TEMPORAL5;

         X|=|         Y|=|         Z                                                                                                                  
==========|=|==========|=|==========                                                                                                                  
         4|=|s/Dato    |=|         5                                                                                                                  
s/Dato    |=|        10|=|         5                                                                                                                  
       101|=|s/Dato    |=|         5                                                                                                                  

3 filas seleccionadas.

SQL> DELETE FROM TEMPORAL5 WHERE X>1;
deleting before                                                                                                                                       
deleting after                                                                                                                                        
4  5                                                                                                                                                  
deleting before                                                                                                                                       
deleting after                                                                                                                                        
101  5                                                                                                                                                

2 filas suprimidas.

SQL> SELECT * FROM TEMPORAL5;

         X|=|         Y|=|         Z                                                                                                                  
==========|=|==========|=|==========                                                                                                                  
s/Dato    |=|        10|=|         5                                                                                                                  

1 fila seleccionada.

SQL> INSERT INTO TEMPORAL5 (X) VALUES (30);
inserting before                                                                                                                                      
inserting after                                                                                                                                       

1 fila creada.

SQL> INSERT INTO TEMPORAL5 (X) VALUES (40);
inserting before                                                                                                                                      
inserting after                                                                                                                                       

1 fila creada.

SQL> INSERT INTO TEMPORAL5 (X) VALUES (50);
inserting before                                                                                                                                      
inserting after                                                                                                                                       

1 fila creada.

SQL> INSERT INTO TEMPORAL5 (X) VALUES (60);
inserting before                                                                                                                                      
inserting after                                                                                                                                       

1 fila creada.

SQL> SELECT * FROM TEMPORAL5;

         X|=|         Y|=|         Z                                                                                                                  
==========|=|==========|=|==========                                                                                                                  
s/Dato    |=|        10|=|         5                                                                                                                  
        30|=|s/Dato    |=|         5                                                                                                                  
        40|=|s/Dato    |=|         5                                                                                                                  
        50|=|s/Dato    |=|         5                                                                                                                  
        60|=|s/Dato    |=|         5                                                                                                                  

5 filas seleccionadas.

SQL> INSERT INTO TEMPORAL5 (Y) VALUES (10);
inserting before                                                                                                                                      
inserting after                                                                                                                                       
X :=                                                                                                                                                  

1 fila creada.

SQL> 
SQL> INSERT INTO TEMPORAL5 (X) VALUES (100);
inserting before                                                                                                                                      
inserting after                                                                                                                                       

1 fila creada.

SQL> SELECT * FROM TEMPORAL5;

         X|=|         Y|=|         Z                                                                                                                  
==========|=|==========|=|==========                                                                                                                  
s/Dato    |=|        10|=|         5                                                                                                                  
        30|=|s/Dato    |=|         5                                                                                                                  
        40|=|s/Dato    |=|         5                                                                                                                  
        50|=|s/Dato    |=|         5                                                                                                                  
        60|=|s/Dato    |=|         5                                                                                                                  
s/Dato    |=|        10|=|         5                                                                                                                  
       100|=|s/Dato    |=|         5                                                                                                                  

7 filas seleccionadas.

SQL> DELETE FROM TEMPORAL5 WHERE X>39;
deleting before                                                                                                                                       
deleting after                                                                                                                                        
40  5                                                                                                                                                 
deleting before                                                                                                                                       
deleting after                                                                                                                                        
50  5                                                                                                                                                 
deleting before                                                                                                                                       
deleting after                                                                                                                                        
60  5                                                                                                                                                 
deleting before                                                                                                                                       
deleting after                                                                                                                                        
100  5                                                                                                                                                

4 filas suprimidas.

SQL> SELECT * FROM TEMPORAL5;

         X|=|         Y|=|         Z                                                                                                                  
==========|=|==========|=|==========                                                                                                                  
s/Dato    |=|        10|=|         5                                                                                                                  
        30|=|s/Dato    |=|         5                                                                                                                  
s/Dato    |=|        10|=|         5                                                                                                                  

3 filas seleccionadas.

SQL> DELETE FROM TEMPORAL5 WHERE X>7;
deleting before                                                                                                                                       
deleting after                                                                                                                                        
30  5                                                                                                                                                 

1 fila suprimida.

SQL> SELECT * FROM TEMPORAL5;

         X|=|         Y|=|         Z                                                                                                                  
==========|=|==========|=|==========                                                                                                                  
s/Dato    |=|        10|=|         5                                                                                                                  
s/Dato    |=|        10|=|         5                                                                                                                  

2 filas seleccionadas.

SQL> 
SQL> CREATE OR REPLACE TRIGGER temp5_aiur
  2  AFTER INSERT OR UPDATE OF Y ON TEMPORAL5
  3  FOR EACH ROW
  4  WHEN (OLD.Y IS NULL and NEW.Y IS NOT NULL
  5  	   OR NEW.X BETWEEN 1 AND 10)
  6  BEGIN
  7  	 CASE
  8  	 WHEN inserting THEN
  9  	     dbms_output.put_line('X := '||:new.x);
 10  	 WHEN updating THEN
 11  	    dbms_output.put_line
 12  	       ('Y is reset from NULL');
 13  	 END CASE;
 14  END;
 15  .
SQL> /

Disparador creado.

SQL> INSERT INTO TEMPORAL5 (X) VALUES (10);
inserting before                                                                                                                                      
X := 10                                                                                                                                               
inserting after                                                                                                                                       
X := 10                                                                                                                                               

1 fila creada.

SQL> INSERT INTO TEMPORAL5 (X) VALUES (9);
inserting before                                                                                                                                      
X := 9                                                                                                                                                
inserting after                                                                                                                                       
X := 9                                                                                                                                                

1 fila creada.

SQL> INSERT INTO TEMPORAL5 (X) VALUES (8);
inserting before                                                                                                                                      
X := 8                                                                                                                                                
inserting after                                                                                                                                       
X := 8                                                                                                                                                

1 fila creada.

SQL> 
SQL> INSERT INTO TEMPORAL5 (X,y,z) VALUES (7,10,20);
inserting before                                                                                                                                      
X := 7                                                                                                                                                
inserting after                                                                                                                                       
X := 7                                                                                                                                                

1 fila creada.

SQL> INSERT INTO TEMPORAL5 (X,y,z) VALUES (7,11,25);
inserting before                                                                                                                                      
X := 7                                                                                                                                                
inserting after                                                                                                                                       
X := 7                                                                                                                                                

1 fila creada.

SQL> INSERT INTO TEMPORAL5 (X,y,z) VALUES (7,12,28);
inserting before                                                                                                                                      
X := 7                                                                                                                                                
inserting after                                                                                                                                       
X := 7                                                                                                                                                

1 fila creada.

SQL> INSERT INTO TEMPORAL5 (X,y,z) VALUES (7,13,20);
inserting before                                                                                                                                      
X := 7                                                                                                                                                
inserting after                                                                                                                                       
X := 7                                                                                                                                                

1 fila creada.

SQL> 
SQL> rem
SQL> CREATE OR REPLACE TRIGGER temp_adr
  2  AFTER DELETE ON TEMPORAL5
  3  FOR EACH ROW
  4  BEGIN
  5  	 dbms_output.put_line
  6  	    (:old.x||' '||:old.y||' '||:old.z);
  7  END;
  8  /

Disparador creado.

SQL> spool off
